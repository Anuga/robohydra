{
    "project": {
        "name": "RoboHydra public API",
        "description": "Public RoboHydra functions and classes available to plugins",
        "url": "http://robohydra.org/docs"
    },
    "files": {
        "../robohydra/bin/robohydra.js": {
            "name": "../robohydra/bin/robohydra.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../robohydra/lib/robohydra.js": {
            "name": "../robohydra/lib/robohydra.js",
            "modules": {},
            "classes": {
                "RoboHydra": 1
            },
            "fors": {
                "robohydra": 1,
                "RoboHydra": 1
            },
            "namespaces": {}
        },
        "../robohydra/lib/utils.js": {
            "name": "../robohydra/lib/utils.js",
            "modules": {},
            "classes": {
                "robohydra": 1,
                "Request": 1,
                "Response": 1
            },
            "fors": {
                "robohydra": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "robohydra": {
            "name": "robohydra",
            "shortname": "robohydra",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "../robohydra/lib/utils.js",
            "line": 19,
            "description": "Utility functions."
        },
        "RoboHydra": {
            "name": "RoboHydra",
            "shortname": "RoboHydra",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "../robohydra/lib/robohydra.js",
            "line": 42,
            "description": "Dispatches the incoming requests. Normally there is only one of\nthis per server, but there can be several if summoners are\nused.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "extraVars",
                    "description": "An optional object with the extra\nconfiguration variables. These take precedence over any other\nconfiguration variables elsewhere, and are the values passed as\ncommand-line parameters in the \"robohydra\" executable.",
                    "type": "Object"
                }
            ]
        },
        "Request": {
            "name": "Request",
            "shortname": "Request",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "../robohydra/lib/utils.js",
            "line": 223,
            "description": "Represents an incoming client request.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "Request URL",
                            "type": "String"
                        },
                        {
                            "name": "method",
                            "description": "Request method (\"GET\", \"POST\", ...)",
                            "type": "String"
                        },
                        {
                            "name": "headers",
                            "description": "Request headers",
                            "type": "Object"
                        },
                        {
                            "name": "rawBody",
                            "description": "Request body, if any",
                            "type": "Buffer"
                        }
                    ]
                }
            ]
        },
        "Response": {
            "name": "Response",
            "shortname": "Response",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "../robohydra/lib/utils.js",
            "line": 293,
            "description": "Represents a server response.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cb",
                    "description": "Callback to be used when the response is\nfinished.",
                    "type": "Function"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "../robohydra/bin/robohydra.js",
            "line": 4,
            "description": "Module dependencies.",
            "class": "robohydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 56,
            "description": "The currently active scenario, if any. It's an object with the\nkeys \"plugin\" and \"scenario\". If there’s no active scenario,\nit’s \"\\*default\\*\" / \"\\*default\\*\".",
            "itemtype": "property",
            "name": "currentScenario",
            "type": "Object",
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 65,
            "description": "Current scenario/test results. Its keys are plugin names and\nits values are objects with scenario names as keys. The values\nof the latter objects are test results: objects with the keys\nresult (value is undefined if the test doesn’t have any result\nyet, or pass or fail if at least one assertion has run for that\ntest), passes (an array with the description of the passing\nassertions) and failures (ditto for failing assertions).",
            "itemtype": "property",
            "name": "scenarioResults",
            "type": "Object",
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 158,
            "description": "Register the given plugin object at the end of the hydra.",
            "itemtype": "method",
            "name": "registerPluginObject",
            "params": [
                {
                    "name": "pluginObject",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "The name of the plugin. Must\nbe exclusively comprised of ASCII letters, numbers, underscores\nand dashes. Mandatory.",
                            "type": "String"
                        },
                        {
                            "name": "path",
                            "description": "The path to the plugin\ndirectory. Mandatory.",
                            "type": "String"
                        },
                        {
                            "name": "config",
                            "description": "An object with the\nplugin-specific configuration. Optional.",
                            "type": "Object"
                        },
                        {
                            "name": "module",
                            "description": "The plugin module itself\n(ie. an object with the \"getBodyParts\" function).",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 182,
            "description": "Adds a new (dynamic) head into a hydra. The new head is added\nat the beginning of the appropriate pseudo-plugin (\"*dynamic*\"\nby default, \"*priority-dynamic*\" if the priority is set to\n\"high\").",
            "itemtype": "method",
            "name": "registerDynamicHead",
            "params": [
                {
                    "name": "head",
                    "description": "The head to add",
                    "type": "RoboHydraHead"
                },
                {
                    "name": "opts",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "priority",
                            "description": "The priority of the head. Can be\n\"normal\" or \"high\"",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 218,
            "description": "Returns the names of the current plugins, including pseudo-plugins.",
            "itemtype": "method",
            "name": "getPluginNames",
            "return": {
                "description": "An array with the names of the plugins in the hydra.",
                "type": "Array"
            },
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 227,
            "description": "Returns a list of all current plugins, including pseudo-plugins.",
            "itemtype": "method",
            "name": "getPlugins",
            "return": {
                "description": "An array containing all plugins in the hydra.",
                "type": "Array"
            },
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 236,
            "description": "Returns a plugin given its name.",
            "itemtype": "method",
            "name": "getPlugin",
            "params": [
                {
                    "name": "pluginName",
                    "description": "The name of the plugin",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The plugin with the given name",
                "type": "Object"
            },
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 252,
            "description": "Returns the first head that matches a given URL.",
            "itemtype": "method",
            "name": "headForPath",
            "params": [
                {
                    "name": "url",
                    "description": "URL path the head must match",
                    "type": "String"
                },
                {
                    "name": "afterHead",
                    "description": "If given, only heads after the\ngiven one will be considered for matching.",
                    "type": "RoboHydraHead"
                }
            ],
            "return": {
                "description": "First head matching the given URL.",
                "type": "RoboHydraHead"
            },
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 317,
            "description": "Detach the given head.",
            "itemtype": "method",
            "name": "detachHead",
            "params": [
                {
                    "name": "pluginName",
                    "description": "The name of the plugin containing the head to\ndetach.",
                    "type": "String"
                },
                {
                    "name": "headName",
                    "description": "The name of the head to detach.",
                    "type": "String"
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 328,
            "description": "Attach the given head.",
            "itemtype": "method",
            "name": "attachHead",
            "params": [
                {
                    "name": "pluginName",
                    "description": "The name of the plugin containing the head to\n(re-)attach.",
                    "type": "String"
                },
                {
                    "name": "headName",
                    "description": "The name of the head to (re-)attach.",
                    "type": "String"
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 401,
            "description": "Start the given scenario.",
            "itemtype": "method",
            "name": "startScenario",
            "params": [
                {
                    "name": "pluginName",
                    "description": "The name of the plugin containing\nthe scenario to start.",
                    "type": "String"
                },
                {
                    "name": "scenarioName",
                    "description": "The name of the scenario to start.",
                    "type": "String"
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 446,
            "description": "Stop the given scenario.",
            "itemtype": "method",
            "name": "stopScenario",
            "params": [
                {
                    "name": "pluginName",
                    "description": "The name of the plugin containing\nthe scenario to stop.",
                    "type": "String"
                },
                {
                    "name": "scenarioName",
                    "description": "The name of the scenario to stop.",
                    "type": "String"
                }
            ],
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 494,
            "description": "Returns an object with the modules for a given plugin.",
            "itemtype": "method",
            "name": "getModulesObject",
            "params": [
                {
                    "name": "conf",
                    "description": "The full, resolved configuration for the\nplugin the module object is for.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object with the names of the available modules\nas keys, and objects with functions as values.",
                "type": "Object"
            },
            "class": "RoboHydra"
        },
        {
            "file": "../robohydra/lib/robohydra.js",
            "line": 526,
            "class": "robohydra"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 25,
            "description": "Serves a static file with correct headers and such, writing the\nresult in the given response object.",
            "itemtype": "method",
            "name": "serveStaticFile",
            "params": [
                {
                    "name": "filePath",
                    "description": "The full path of the file to be served.",
                    "type": "String"
                },
                {
                    "name": "res",
                    "description": "Response object to write the response to.",
                    "type": "Response"
                },
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fs",
                            "description": "The 'fs' module (or a mock) to be used\nwhen reading from the filesystem.",
                            "type": "Object"
                        },
                        {
                            "name": "mime",
                            "description": "The 'mime' module (or a mock) to be\nused when figuring out the MIME type for a file.",
                            "type": "Object"
                        },
                        {
                            "name": "headers",
                            "description": "An object with the incoming\nrequest headers (for caching and such).",
                            "type": "Object"
                        },
                        {
                            "name": "indexFiles",
                            "description": "An array with the filenames to\nbe used as index if the given file path is a directory (by\ndefault, \"index.html\", \"index.htm\", \"home.html\" and\n\"home.htm\").",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "robohydra"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 103,
            "description": "Proxies the given request to the given URL, writing the result\nin the given response object.",
            "itemtype": "method",
            "name": "proxyRequest",
            "params": [
                {
                    "name": "req",
                    "description": "The request object to proxy.",
                    "type": "Request"
                },
                {
                    "name": "res",
                    "description": "The response object to write the result to.",
                    "type": "Response"
                },
                {
                    "name": "proxyTo",
                    "description": "The URL to proxy to, either in the form of\na URL object (result of the url.parse method) or a string.",
                    "type": "URL"
                },
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "httpRequestFunction",
                            "description": "The http.request\nfunction or a mock of it.",
                            "type": "Function"
                        },
                        {
                            "name": "httpsRequestFunction",
                            "description": "The https.request\nfunction or a mock of it.",
                            "type": "Function"
                        },
                        {
                            "name": "setHostHeader",
                            "description": "Specifies if the \"Host\"\nheader should be set in the proxied request, so pretend as if\nthe original request was indeed intended for the final\nURL. Defaults to false.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "robohydra"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 233,
            "description": "Request URL.",
            "itemtype": "attribute",
            "name": "url",
            "type": "String",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 239,
            "description": "Request method, normalised to uppercase.",
            "itemtype": "attribute",
            "name": "method",
            "type": "String",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 245,
            "description": "Request headers.",
            "itemtype": "attribute",
            "name": "headers",
            "type": "Object",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 251,
            "description": "Request body.",
            "itemtype": "attribute",
            "name": "rawBody",
            "type": "Buffer",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 257,
            "description": "Request body parameters.",
            "itemtype": "attribute",
            "name": "bodyParams",
            "type": "Object",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 263,
            "description": "Request query parameters (\"GET\" parameters).",
            "itemtype": "attribute",
            "name": "queryParams",
            "type": "Object",
            "class": "Request"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 300,
            "description": "Response body.",
            "itemtype": "attribute",
            "name": "body",
            "type": "Buffer",
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 306,
            "description": "Response status code.",
            "itemtype": "attribute",
            "name": "statusCode",
            "type": "Integer",
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 312,
            "description": "Response headers.",
            "itemtype": "attribute",
            "name": "headers",
            "type": "Object",
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 318,
            "description": "Whether the response is finished.",
            "itemtype": "attribute",
            "name": "ended",
            "type": "Boolean",
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 346,
            "description": "Sets and writes the response headers.",
            "itemtype": "method",
            "name": "writeHead",
            "params": [
                {
                    "name": "statusCode",
                    "description": "The response's status code.",
                    "type": "Integer"
                },
                {
                    "name": "headers",
                    "description": "The response's headers.",
                    "type": "Object"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 361,
            "description": "Writes part of the response body.",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "chunk",
                    "description": "Data to add to the current response\nbody. This parameter can be a string, too.",
                    "type": "Buffer"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 385,
            "description": "Adds the given data to the response body and finishes\nit. Equivalent to calling the `write` method, then `end`.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "data",
                    "description": "to add to the response body.",
                    "type": "Buffer"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 396,
            "description": "Marks the response as complete and calls the 'end' callback.",
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 414,
            "description": "Copies the response given as a parameter into the current\nresponse object.",
            "itemtype": "method",
            "name": "copyFrom",
            "params": [
                {
                    "name": "res",
                    "description": "Response object to copy.",
                    "type": "Response"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 427,
            "description": "Forwards the response given as a parameter. That is, copies the\ngiven response in the current object, then marks the given\nobject as finished.",
            "itemtype": "method",
            "name": "forward",
            "params": [
                {
                    "name": "res",
                    "description": "The response object to forward.",
                    "type": "Response"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 439,
            "description": "Adds a callback to the given event. An event can have more than\none callback. All callbacks for an event will be called in\norder when the event is triggered.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The name of the event to attach the\ncallback to. Possible event names are `head`, `data` and `end`.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "The callback to attach to the given event.",
                    "type": "Function"
                }
            ],
            "class": "Response"
        },
        {
            "file": "../robohydra/lib/utils.js",
            "line": 457,
            "description": "Chains the response given as a parameter to the current\nobject. This means that as data is written to the current\nobject, that same data will be written in the parameter. It's\nsimilar to `copyFrom`, but with the following differences:\n\n* `chain` is called on the source object, not the target.\n* `chain` is to be used _before_ any data is written to the\n  source object.\n* `chain` will write data as it's received, instead of\n  everything at once.",
            "itemtype": "method",
            "name": "chain",
            "params": [
                {
                    "name": "response",
                    "description": "Response object to chain to the\ncurrent object.",
                    "type": "Response"
                }
            ],
            "class": "Response"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " ../robohydra/bin/robohydra.js:4"
        },
        {
            "message": "Missing item type",
            "line": " ../robohydra/lib/robohydra.js:526"
        },
        {
            "message": "Missing item type\nMarks the response as complete and calls the 'end' callback.",
            "line": " ../robohydra/lib/utils.js:396"
        }
    ]
}